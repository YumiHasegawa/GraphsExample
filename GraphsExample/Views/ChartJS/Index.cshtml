@using Omu.Awem.Helpers
@using Omu.AwesomeMvc
@model GraphsExample.ViewModels.ChartJSViewModel

@{
    ViewData["Title"] = "ChartJS";
}

@using (Html.Awe().BeginContext())
{
    @Html.DisplayForModel()
    var grid = "ChartJS";
    var gridId = Html.Awe().GetContextPrefix() + grid;
    object gg = null;

    <div>
        @(Html.Awe().Grid(grid)
            .Url(Url.Action("GridGetItems", "ChartJS"))
            .RowClassClientFormat("infoBackground")
            .Mod(a => a.Loading(true, true, "no items"))
            .Columns(
                new Column { Header = "Graph column", Width = 200, ClientFormatFunc = "getGraph" }, //ClientFormat = "<canvas id=\"myChart\"></canvas>" ClientFormatFunc = "getGraph"
                new Column { Header = "Any column" }
            )
        .ShowGroupBar(false)
        .Groupable(false)
        .Sortable(false)
        .Reorderable(false)
        .Resizable(true)
        .Paging(false)
        .Persistence(Persistence.None))
    </div>
    <div>
        <canvas id="myChart"></canvas>
    </div>
    <img id="image"/>
    <div id="hidden_container" style="visibility: hidden; width:none; height:none"></div>


    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js"></script>
    <script type="text/javascript">

        var myChart;
        const labels = [
            'January',
            'February',
            'March',
            'April',
            'May',
            'June',
        ];
        const data = {
            labels: labels,
            datasets: [{
                label: 'My First dataset',
                backgroundColor: 'rgb(255, 99, 132)',
                borderColor: 'rgb(255, 99, 132)',
                data: [0, 10, 5, 2, 20, 30, 45],
            }]
        };

        const config = {
            type: 'line',
            data,
            options: {
                animation: {
                    onComplete: function () {
                        document.getElementById("image").src = myChart.toBase64Image();
                    }
                }
            }
        };

        function getGraph(o) {

            //var canvasDiv = document.createElement('div');
            //canvasDiv.setAttribute("style", "width:400px");
            var canvasDiv = document.getElementById("hidden_container");
            var canvasElem = document.createElement('canvas');
            canvasElem.id = o.id + '-Canvas';
            canvasElem.width = "100px";
            canvasElem.height = "100px";
            canvasDiv.appendChild(canvasElem);

            var image = new Image();
            image.id = o.id + '-Image';
            image.className = "graphCss";

            var chart = new Chart(
                canvasElem.getContext("2d"),
                {
                    type: 'line',
                    data,
                    options: {
                        animation: {                         
                            onComplete: function () {
                                var img = document.getElementById(o.id + '-Image');
                                img.src = chart.toBase64Image();
                            }
                        }
                    }
                });

            canvasDiv.removeChild(canvasElem);
            return image.outerHTML;
        }

        $(document).ready(function () {
            $('#@(gridId)').on('aweload', function (e, data) {
                var v = document.getElementById("myChart");
                myChart = new Chart(
                    v.getContext("2d"),
                    config
                );
            });
        });

    </script>

    <style>
        .awe-row .graphCss {
            width: 100%;
            height: 100%;
        }
    </style>
}